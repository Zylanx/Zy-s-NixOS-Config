# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];


  boot.kernelParams = [
    # "mem_sleep_default=deep"
    "nvme.noacpi=1"
    "intel_iommu=on"
  ];
  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [
    "kvm-intel"
    "vfio-pci"
  ];
  boot.extraModulePackages = [ ];
  boot.extraModprobeConfig = "options i915 enable_guc=2";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/5e44501f-468b-4939-8b0c-c972f23c7985";
      fsType = "ext4";
    };

  swapDevices = [ ];

  time.hardwareClockInLocalTime = true;

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  powerManagement.enable = lib.mkDefault true;
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.bluetooth.enable = true;

  hardware.opengl = {
    enable = true;

    extraPackages = [
      pkgs.intel-compute-runtime
      pkgs.beignet
    ];
  };
}
